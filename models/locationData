"use strict";
module.exports = (sequelize, DataTypes) => {
  const Address = sequelize.define("address_data", {
    the_key: {
        type: DataTypes.INTEGER,
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
      },
      cvr_nr:{
        type: DataTypes.INTEGER,
        allowNull:true
      },
      cvr_navn:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_nr:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_navn:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_ansatte:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_ansatte_interval:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_ansatte_date:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_adresseid:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_vejkode:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_vejnavn:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_husnr:{
        type: DataTypes.INTEGER,
        allowNull:true
      },
      p_bogstav:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_etage:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_door:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_postnr:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_postnrnavn:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_kommunenavn:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_kommunekode:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_region:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_sammensatStatus:{
        type: DataTypes.STRING,
        allowNull:true
      },
      p_last_update:{
        type: DataTypes.STRING,
        allowNull:true
      }      
  });
  return Address;
};

//   Company.associate = (models) => {
//     Company.hasMany(models.Employees, {
//       as: "employees",
//       foreignKey: "fk_company_id",
//       targetKey: "id",
//     });
//     Company.hasMany(models.Services, {
//       as: "services",
//       foreignKey: "companiesId",
//       targetKey: "id",
//     });
// }
// Company.associate = (models) => {
//   //console.log(`models: ${models}`);
//   Company.hasMany(models.Services, {
//     as: "services",
//     foreignKey: "companiesId",
//     targetKey: "id",
//   });
// }




